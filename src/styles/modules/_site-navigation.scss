//
// Module: site-navigation.
//

@use '../settings/theme';
@use '../tools/layout';
@use '../tools/respond';

%reset {
	ul {
		display: block;
		list-style: none;
		margin: 0;
		padding: 0;
	}

	li {
		display: block;
	}

	a {
		display: inline-block;
		text-decoration: none;
	}
}

.site-navigation {
	$self: &;

	@extend %reset;
	position: absolute;

	@include respond.to( 'desktop' ) {
		position: static;
	}

	// Dark overlay.
	&::after {
		content: '';
		position: fixed;
		z-index: 98;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
		background-color: rgba( 0, 0, 0, 0.25 );
		pointer-events: none;
		opacity: 0;
		transition: opacity 0.2s;

		@include respond.to( 'desktop' ) {
			display: none;
		}
	}
	&[aria-expanded='true'],
	&:focus-within {
		&::after {
			opacity: 1;
		}
	}

	// Mobile slide-out element.
	&__inner-container {
		// Since mobile styles are more complicated, we're taking a desktop-first approach so that we don't have to override all of this.
		@include respond.to( 'desktop', 'max-width' ) {
			position: fixed;
			z-index: 99;
			top: var( --global--admin-bar--height, 0 );
			left: 100%; // Start offscreen.
			bottom: 0;
			width: 80%;
			max-width: 26rem;
			background-color: theme.get-var( 'theme-colors', 'background' );
			padding: theme.get-var( 'sizes', 'gutter' );
			overflow-y: auto;
			transition: all 0.2s;

			#{$self}[aria-expanded='true'] &,
			#{$self}:focus-within & {
				// Transitioning transform is more performant than the left property.
				transform: translateX( -100% );
			}
		}
	}

	&__menus {
		display: flex;
		flex-direction: column;
		gap: 1rem;

		@include respond.to( 'desktop' ) {
			flex-direction: column-reverse;
			justify-content: space-between;
			align-items: flex-end;
		}
	}

	%header-menu {
		display: flex;
		gap: 1rem;
		flex-direction: column;
		font-family: theme.get-var( 'font-families', 'sans-serif' );

		@include respond.to( 'desktop' ) {
			flex-direction: row;
		}

		// First-level sub-menus.
		> .menu-item-has-children {
			position: relative;

			> .sub-menu {
				@include respond.to( 'desktop' ) {
					visibility: hidden;
					position: absolute;
					top: 100%;
					min-width: 14rem;
					padding: theme.get-var( 'sizes', 'gutter' );
					background-color: theme.get-var(
						'theme-colors',
						'background'
					);
					box-shadow: 0 3px 3px rgba( 0, 0, 0, 0.125 );
					opacity: 0;
					transform-origin: top left;
					transform: scaleY( 0.9 );
					transition: all 0.2s;
				}
			}

			&:hover,
			&:focus,
			&:focus-within {
				> .sub-menu {
					visibility: visible;
					opacity: 1;
					transform: scaleY( 1 );
				}
			}
		}
	}

	&__menu--primary {
		@extend %header-menu;

		a {
			color: theme.get-var( 'theme-colors', 'foreground' );
			font-weight: bold;
		}

		.current_page_item,
		.current-menu-item,
		.current_page_parent,
		.current_-menu-parent,
		.current_page_ancestor,
		.current-menu-ancestor {
			a {
				color: theme.get-var( 'theme-colors', 'primary' );
			}
		}
	}

	&__menu--secondary {
		@extend %header-menu;
		font-size: 0.8rem;

		a {
			color: theme.get-var( 'theme-colors', 'muted' );
		}

		.current_page_item,
		.current-menu-item,
		.current_page_parent,
		.current_-menu-parent,
		.current_page_ancestor,
		.current-menu-ancestor {
			a {
				color: theme.get-var( 'theme-colors', 'secondary' );
			}
		}
	}

	.menu-item-has-children {
		@include respond.to( 'desktop' ) {
			&::after {
				content: 'â–¾';
			}
		}
	}

	.sub-menu {
		padding-left: 1rem;
	}

	// Variations.

	&--footer {
		@extend %reset;

		display: flex;
		flex-direction: column;
		gap: 1rem;
		margin-block: theme.get-var( 'sizes', 'gutter' );

		%footer-menu {
			display: flex;
			gap: 1rem;
			flex-direction: column;
			justify-content: center;
			font-family: theme.get-var( 'font-families', 'sans-serif' );

			@include respond.to( 'desktop' ) {
				flex-direction: row;
			}
		}

		#{$self}__menu--primary-footer {
			@extend %footer-menu;
		}

		#{$self}__menu--secondary-footer {
			@extend %footer-menu;
		}
	}
}
